/*
 * Copyright 2025 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(sequential_mux.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b9d95a55f20a284c595271178ab08ef8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/hsdec/sequential_mux.h>
// pydoc.h is automatically generated in the build directory
#include <sequential_mux_pydoc.h>

void bind_sequential_mux(py::module& m)
{

    using sequential_mux    = ::gr::hsdec::sequential_mux;


    py::class_<sequential_mux, gr::block, gr::basic_block,
        std::shared_ptr<sequential_mux>>(m, "sequential_mux", D(sequential_mux))

        .def(py::init(&sequential_mux::make),
           py::arg("n"),
           D(sequential_mux,make)
        )
        




        
        .def("set_n",&sequential_mux::set_n,       
            py::arg("n"),
            D(sequential_mux,set_n)
        )

        ;




}








